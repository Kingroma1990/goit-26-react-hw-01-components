{"version":3,"sources":["components/profile/profile.module.css","components/statistics/Statistics.module.css","components/friendList/FriendList.module.css","components/transaction/transactions.module.css","components/profile/Profile.js","components/statistics/Statistics.js","components/friendList/FriendList.js","components/transaction/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","user","className","stylePro","profile","description","src","avatar","alt","name","tag","location","stats","label","quantity","followers","views","likes","color","Math","floor","random","toString","console","log","Statistics","title","styleStat","statistics","statList","map","Statistic","item","key","id","style","background","percentage","FriendList","friends","styleFriend","friendlist","friend","isOnline","onLine","offLine","width","TransactionHistory","items","tranStyle","transaction__history","transaction__head","type","amount","currency","App","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.034bdfc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__2fSLo\",\"avatar\":\"profile_avatar__ESo-3\",\"name\":\"profile_name__1CIJE\",\"tag\":\"profile_tag__2_Tj-\",\"location\":\"profile_location__1rF1W\",\"stats\":\"profile_stats__11HXS\",\"label\":\"profile_label__1_uW1\",\"quantity\":\"profile_quantity__1uvlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1HK5l\",\"title\":\"Statistics_title__3OHGz\",\"statList\":\"Statistics_statList__1zEqW\",\"item\":\"Statistics_item__CcLRl\",\"pulsate\":\"Statistics_pulsate__st5w8\",\"label\":\"Statistics_label__bxoMD\",\"percentage\":\"Statistics_percentage__2ETpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendlist\":\"FriendList_friendlist__1M6qV\",\"item\":\"FriendList_item__2vb3m\",\"status\":\"FriendList_status__30D_F\",\"avatar\":\"FriendList_avatar__3ZdjK\",\"name\":\"FriendList_name__1uBdC\",\"onLine\":\"FriendList_onLine__MtKXW\",\"offLine\":\"FriendList_offLine__2ukOb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction__history\":\"transactions_transaction__history__qON2Y\",\"transaction__head\":\"transactions_transaction__head__1adb1\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport stylePro from \"./profile.module.css\";\r\n\r\nconst Profile = ({ ...user }) => (\r\n  <div className={stylePro.profile}>\r\n    <div className={stylePro.description}>\r\n      <img src={user.avatar} alt=\"user avatar\" className={stylePro.avatar} />\r\n      <p className={stylePro.name}>{user.name}</p>\r\n      <p className={stylePro.tag}>{user.tag}</p>\r\n      <p className={stylePro.location}>{user.location}</p>\r\n    </div>\r\n    <ul className={stylePro.stats}>\r\n      <li>\r\n        <span className={stylePro.label}>Followers</span>\r\n        <span className={stylePro.quantity}>{user.stats.followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className={stylePro.label}>Views</span>\r\n        <span className={stylePro.quantity}>{user.stats.views}</span>\r\n      </li>\r\n      <li>\r\n        <span className={stylePro.label}>Likes</span>\r\n        <span className={stylePro.quantity}>{user.stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  alt: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styleStat from \"./Statistics.module.css\";\r\n\r\n\r\nfunction generateColor() {\r\n  return '#' + Math.floor(Math.random()*16777215).toString(16)\r\n}\r\nconst color = generateColor()\r\nconsole.log(color)\r\n\r\nconst Statistics = ({ stats, title }) => (\r\n  <section className={styleStat.statistics}>\r\n    <h2 className={styleStat.title}>{title}</h2>\r\n    <ul className={styleStat.statList} >\r\n      { stats.map((Statistic ) => (\r\n        <li className={styleStat.item} key={Statistic.id} style={{background:`${color}`}}>\r\n          <span className={styleStat.label} >{Statistic.label}</span>\r\n          <span className={styleStat.percentage}>{Statistic.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\n\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styleFriend from \"./FriendList.module.css\";\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={styleFriend.friendlist}>\r\n    {friends.map((friend) => (\r\n      <li key={friend.id} className={styleFriend.item}>\r\n        <span className={friend.isOnline ? styleFriend.onLine : styleFriend.offLine}></span>\r\n        <img\r\n          className={styleFriend.avatar}\r\n          src={friend.avatar}\r\n          alt=\"user avatar\"\r\n          width=\"48\"\r\n        />\r\n        <p className={styleFriend.name}>{friend.name}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport tranStyle from \"./transactions.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={tranStyle.transaction__history}>\r\n    <thead>\r\n      <tr className={tranStyle.transaction__head}>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(({ id, type, amount, currency }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\r\nimport Profile from \"./profile/Profile\";\r\nimport user from \"./profile/user.json\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport statisticalData from \"./statistics/statistical-data.json\";\r\nimport FriendList from \"./friendList/FriendList\";\r\nimport friends from \"./friendList/friends.json\";\r\nimport TransactionHistory from \"./transaction/TransactionHistory\";\r\nimport transactions from \"./transaction/transactions.json\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <Profile\r\n      name={user.name}\r\n      tag={user.tag}\r\n      location={user.location}\r\n      avatar={user.avatar}\r\n      stats={user.stats}\r\n      // {...user}\r\n    />\r\n\r\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n    <FriendList friends={friends} />\r\n    <TransactionHistory items={transactions} />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}